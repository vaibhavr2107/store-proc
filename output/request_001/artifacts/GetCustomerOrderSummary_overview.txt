Procedure: GetCustomerOrderSummary

Summary:
The stored procedure orchestrates data retrieval across tables: audit_logs, customers, inventory, order_items, orders, payments, products, suppliers.

Domain Mapping:
- customerManagement: customers, audit_logs, customer
- orderManagement: orders, order_items
- productCatalog: products, inventory
- supplierManagement: suppliers
- paymentProcessing: payments

Procedure Flow:
- Get customer information Select from customers retrieving address, customer_name, email, phone. Filters: c.customer_id = customer_id.
- Get order summary Select from orders retrieving order_id, total_amount. Filters: o.customer_id = customer_id
 AND o.order_date BETWEEN start_date AND end_date.
- Get detailed order items Select from orders retrieving order_date, order_id. Join to order_items to access product_id, quantity, unit_price. Join to products to access category, product_name. Join to inventory to access stock_quantity. Join to suppliers to access contact_email, supplier_name. Filters: o.customer_id = customer_id
 AND o.order_date BETWEEN start_date AND end_date.
- Get payment information Select from payments retrieving amount, order_id, payment_date, payment_id, payment_method, payment_status. Filters: o.customer_id = customer_id
 AND o.order_date BETWEEN start_date AND end_date.
- Update customer last_access_date Update customers with statement: UPDATE customers
SET last_access_date = NOW()
WHERE customer_id = customer_id.
- Log the access in audit table Insert into audit_logs: INSERT INTO audit_logs (table_name, operation, record_id, timestamp, user_id)
VALUES ('customers', 'SELECT', customer_id, NOW(), USER()).

Inter-Domain Dependencies:
- orderManagement depends on productCatalog via orders->inventory, orders->products
- orderManagement depends on supplierManagement via orders->suppliers
- paymentProcessing depends on orderManagement via payments->orders

Table Aliases:
- c -> customers
- o -> orders
- pay -> payments
- oi -> order_items
- p -> products
- inv -> inventory
- s -> suppliers

CRUD Summary:
- audit_logs:
  • CREATE: operation, record_id, table_name, timestamp, user_id
- customers:
  • READ: address, customer_name, email, phone
  • UPDATE: last_access_date
- inventory:
  • READ: stock_quantity
- order_items:
  • READ: product_id, quantity, unit_price
- orders:
  • READ: order_date, order_id, total_amount
- payments:
  • READ: amount, order_id, payment_date, payment_id, payment_method, payment_status
- products:
  • READ: category, product_name
- suppliers:
  • READ: contact_email, supplier_name